name: Prod - Deploy

on:
  workflow_run:
    workflows: [Stage - Build & Deploy]
    types:
      - completed

jobs:
  download_sha:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/github-script@v8
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "sha_output"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            const fs = require('fs');
            const path = require('path');
            const temp = '${{ runner.temp }}/artifacts';
            if (!fs.existsSync(temp)){
              fs.mkdirSync(temp);
            }
            fs.writeFileSync(path.join(temp, 'sha_output.zip'), Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip "${{ runner.temp }}/artifacts/sha_output.zip" -d "${{ runner.temp }}/artifacts"

      - name: Save SHA
        run: |
          SHA_OUTPUT=$(cat "${{ runner.temp }}/artifacts/sha.txt" | cut -d '=' -f2)
          echo "SHA=$SHA_OUTPUT" >> $GITHUB_ENV


  create-tag-after-approve:
    needs: download_sha
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Re-tag an image for prod
        run: |
          docker buildx imagetools create --tag \
          ${{ vars.DOCKERHUB_USERNAME }}/jb-basic-app:main-${{ github.run_number }} \
          ${{ vars.DOCKERHUB_USERNAME }}/jb-basic-app:stage-${{ env.SHA }}

  deploy:
    needs: create-tag-after-approve
    uses: ./.github/workflows/general-deploy.yaml
    secrets: inherit
    with:
      environment: prod
      image_tag: main-${{ github.run_number }}
