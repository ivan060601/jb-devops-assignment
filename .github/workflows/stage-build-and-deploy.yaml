name: Stage - Build & Deploy

on:
  pull_request:
    types:
      - closed
    branches:
      - stage
    paths-ignore:
      - '.gitignore'
      - 'README.md'

env:
  GITHUB_TOKEN: ${{ secrets.GIT_MERGE_TOKEN }}

jobs:
  build:
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/general-build.yaml
    secrets: inherit
    with:
      image_tag: ${{ github.base_ref }}-${{ github.sha }}
  deploy:
    needs: build
    uses: ./.github/workflows/general-deploy.yaml
    secrets: inherit
    with:
      environment: stage
      image_tag: ${{ github.base_ref }}-${{ github.sha }}
      subdomain: ${{ github.base_ref }}

  save_tag:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Write tag to version file
        run: yq -i '.image.tag = "${{ github.base_ref }}-${{ github.sha }}"' manifests-helm/values/stage.yaml

      - name: Commit and push version
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add manifests-helm/values/stage.yaml
          git commit -m "save tag after successful deploy for ${{ github.base_ref }}"
          git push origin ${{ github.base_ref }} --force

  run_vulnerability_tests:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ vars.DOCKERHUB_USERNAME }}/jb-basic-app:${{ github.base_ref }}-${{ github.sha }}
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'


  run_smoke_tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Wait while SSL certificate is issued
        run: |
          echo "Waiting for a trusted SSL certificate for ${{ github.base_ref }}.${{ vars.BASE_DOMAIN_NAME }} ..."

          for i in {1..30}; do
            if curl -sI "https://${{ github.base_ref }}.${{ vars.BASE_DOMAIN_NAME }}"  >/dev/null 2>&1; then
              echo "✅ Trusted SSL certificate is available for the domain"
              exit 0
            else
              sleep 10
            fi
          done

          echo "❌ Timeout: Trusted SSL certificate did not appear within 5 minutes."
          exit 1

      - name: Really strong test
        run: |
          curl --fail https://${{ github.base_ref }}.${{ vars.BASE_DOMAIN_NAME }}/healthCheck 

  promote_to_prod:
    needs:
      - run_vulnerability_tests
      - run_smoke_tests
    runs-on: ubuntu-latest
    steps:
      - name: Save stable SHA
        run: echo "SHA=${{ github.event.pull_request.merge_commit_sha }}" >> sha.txt
      - uses: actions/upload-artifact@v4
        with:
          name: sha_output
          path: sha.txt
