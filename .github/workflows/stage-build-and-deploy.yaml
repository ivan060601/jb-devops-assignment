name: Stage - Build & Deploy

on:
  pull_request:
    types:
      - closed
    branches:
      - stage

env:
  TAG_BASE: stage

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build an image
        uses: ./.github/actions/basic-app-build
        with:
          docker_username: ${{ vars.DOCKERHUB_USERNAME }}
          docker_password: ${{ secrets.DOCKERHUB_TOKEN }}
          image_names: |
            ${{ vars.DOCKERHUB_USERNAME }}/jb-basic-app:${{ env.TAG_BASE }}-${{ github.sha }}
            ${{ vars.DOCKERHUB_USERNAME }}/jb-basic-app:${{ env.TAG_BASE }}-latest

      - name: Notify FAIL in Telegram
        if: failure()
        uses: ./.github/actions/telegram-notifier
        with:
          telegram_bot_token: '${{ secrets.TELEGRAM_BOT_TOKEN }}'
          telegram_chat_id: '${{ secrets.TELEGRAM_CHAT_ID }}'
          message_content: |
            ERROR
            An error occured while building the docker image

            More details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    environment:
      name: stage
      url: https://${{ env.TAG_BASE }}.${{ vars.BASE_DOMAIN_NAME }}
    steps:
      - uses: actions/checkout@v5
      - name: Deploy a Helm-chart
        uses: ./.github/actions/basic-app-deploy
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          domain_name: ${{ env.TAG_BASE }}.${{ vars.BASE_DOMAIN_NAME }}
          values_path: manifests-helm/values/stage.yaml
          namespace: ${{ env.TAG_BASE }}
          release_name: ${{ env.TAG_BASE }}
          image_tag: ${{ env.TAG_BASE }}-${{ github.sha }}

      - name: Notify SUCCESS in Telegram
        if: success()
        uses: ./.github/actions/telegram-notifier
        with:
          telegram_bot_token: '${{ secrets.TELEGRAM_BOT_TOKEN }}'
          telegram_chat_id: '${{ secrets.TELEGRAM_CHAT_ID }}'
          message_content: |
            UPDATE
            Env: <code>${{ env.TAG_BASE }}</code> 

            Link: https://${{ env.TAG_BASE }}.${{ vars.BASE_DOMAIN_NAME }}

      - name: Notify FAIL in Telegram
        if: failure()
        uses: ./.github/actions/telegram-notifier
        with:
          telegram_bot_token: '${{ secrets.TELEGRAM_BOT_TOKEN }}'
          telegram_chat_id: '${{ secrets.TELEGRAM_CHAT_ID }}'
          message_content: |
            ERROR
            An error occured while deploying a <code>${{ env.TAG_BASE }}</code>

            More details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  
  run_vulnerability_tests:
    needs: docker-build
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ vars.DOCKERHUB_USERNAME }}/jb-basic-app:${{ env.TAG_BASE }}-${{ github.sha }}
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'


  run_smoke_tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Wait while SSL certificate is issued
        run: |
          echo "Waiting for a trusted SSL certificate for ${{ env.TAG_BASE }}.${{ vars.BASE_DOMAIN_NAME }} ..."

          for i in {1..30}; do
            if curl -sI "https://${{ env.TAG_BASE }}.${{ vars.BASE_DOMAIN_NAME }}"  >/dev/null 2>&1; then
              echo "✅ Trusted SSL certificate is available for the domain"
              exit 0
            else
              sleep 10
            fi
          done

          echo "❌ Timeout: Trusted SSL certificate did not appear within 5 minutes."
          exit 1

      - name: Really strong test
        run: |
          curl --fail https://${{ env.TAG_BASE }}.${{ vars.BASE_DOMAIN_NAME }}/healthCheck 